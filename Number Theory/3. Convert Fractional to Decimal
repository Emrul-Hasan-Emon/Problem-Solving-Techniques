Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Input: numerator = 1, denominator = 2
Output: "0.5

Input: numerator = 4, denominator = 333
Output: "0.(012)"

Problem : https://leetcode.com/problems/fraction-to-recurring-decimal/

// ============================================================================ //
// ||                                                                        || //
// ||             International University of Business Agriculture           || //
// ||                    and Technology, DHaka, Bangladesh                   || //
// ||                           Emrul Hasan Emon                             || //
// ||                                                                        || //
// ============================================================================ //


///              B I S M I L L A H I R  R A H M A N I R  R A H I M


#include<bits/stdc++.h>
#include<vector>
#include<set>
#include<map>
#include<queue>
using namespace std;
typedef bool                      boo;
typedef int                       li;
typedef long long int             ll;
typedef unsigned long long int    l1;
typedef double                    db;

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

typedef vector < li >                   vli;
typedef vector < ll >                   vll;
typedef set < li >                      sli;
typedef set < ll >                      sll;
typedef pair < li, li >                pli;
typedef pair < ll, ll >                pll;
typedef map < li,li >                  mli;
typedef map < ll,ll >                  mll;
typedef vector < pair < li, li > >     vpi;
typedef vector < pair < ll, ll > >     vpl;

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define tc                        int t;cin>>t;while(t--)
#define inp_i(a,n)                for(i=0; i<n ;i++) cin>>a[i]
#define out_i(a, b, c)            for(i=b; i<c; i++) cout<<a[i] spc; cout nl;
#define lp(i,a,b)                 for(i=a;i<b;i++)
#define len(z)                    z.begin(),z.end()
#define faster                    ios::sync_with_stdio(0); cin.tie(0);cout.tie(0);
#define input_txt                 freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define nl                        <<"\n"
#define spc                       <<" "
#define sp                        <<" "<<
#define co(x)                     cout<<x nl
#define sz(a)                     a.size()
#define cy                        cout<<"YES" nl
#define cn                        cout<<"NO" nl
#define pb                        push_back
#define F                         first
#define S                         second
#define pi                        2*acos(0.0)
#define clr(z)                    z.clear()
#define rn                        return
#define gcd(a,b)                  __gcd(a,b)
#define mem(b,z)                  memset(b,z,sizeof(b))
#define fixed(x)                  fixed<<setprecision(x)

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

const int lx=1e6+123;
const ll mod = 1000000007;

string represent_string(long long a, long long b)
{
    if(a==0)
        return "0";
    long long sign=0, _a, _b, rem, initial, index;
    string result;

    if(a<0)
        sign++;
    if(b<0)
        sign++;
    sign=sign&1;

    _a=abs(a);
    _b=abs(b);

    initial=_a/_b;

    if(sign)
        result="-";

    result+=to_string(initial);

    if(_a%_b==0)
        return result;

    result+=".";
    map<long long, long long>mp;

    rem=_a%_b;
    bool repeat=false;

    while(rem>0 and !repeat)
    {
        if(mp[rem]>0)
        {
            index=mp[rem];
            repeat=true;
            break;
        }
        else
            mp[rem]=result.size();

        rem=rem*10;
        int temp;
        temp=rem/_b;
        result+=to_string(temp);
        rem=rem%_b;
    }

    if(repeat)
    {
        result+=")";
        result.insert(index, "(");
    }
    return result;
}

void solve()
{
    int a, b;
    cin>>a>>b;
    string s;
    s=represent_string(a, b);
    cout<<s<<endl;
}

void init_code()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
}

int main()
{
    faster
    //  init_code();
    solve();
// A L H A M D U L I L L A H
// 1 2 3 2 1
}
