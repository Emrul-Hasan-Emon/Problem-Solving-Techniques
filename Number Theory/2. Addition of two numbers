Addition of two numbers is quite easy but if I say each number consist more than 1000 digits, at that time it is not possible to do addition using normal multiplication sign.
But we can use our regular childhood method.
For example,

    123456789
   +656757612
---------------
    780214101
 We have to keep track for carry.
 We will store the numbers in string and after that if the strings are not equal we will make them equal by adding zeros in front of smaller string until it becaomes equal to
 larger one. And after that we will iterate from right. Everry time we will add two digits as well as carry(Initially carry will be 0). And after that if the number is larger than
 10 we will keep carry and another one we will add to string. Thats it.
 
// ============================================================================ //
// ||                                                                        || //
// ||             International University of Business Agriculture           || //
// ||                    and Technology, DHaka, Bangladesh                   || //
// ||                           Emrul Hasan Emon                             || //
// ||                                                                        || //
// ============================================================================ //


///              B I S M I L L A H I R  R A H M A N I R  R A H I M


#include<bits/stdc++.h>
#include<vector>
#include<set>
#include<map>
#include<queue>
using namespace std;
typedef bool                      boo;
typedef int                       li;
typedef long long int             ll;
typedef unsigned long long int    l1;
typedef double                    db;

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

typedef vector < li >                   vli;
typedef vector < ll >                   vll;
typedef set < li >                      sli;
typedef set < ll >                      sll;
typedef pair < li, li >                pli;
typedef pair < ll, ll >                pll;
typedef map < li,li >                  mli;
typedef map < ll,ll >                  mll;
typedef vector < pair < li, li > >     vpi;
typedef vector < pair < ll, ll > >     vpl;

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define tc                        int t;cin>>t;while(t--)
#define inp_i(a,n)                for(i=0; i<n ;i++) cin>>a[i]
#define out_i(a, b, c)            for(i=b; i<c; i++) cout<<a[i] spc; cout nl;
#define lp(i,a,b)                 for(i=a;i<b;i++)
#define len(z)                    z.begin(),z.end()
#define faster                    ios::sync_with_stdio(0); cin.tie(0);cout.tie(0);
#define input_txt                 freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define nl                        <<"\n"
#define spc                       <<" "
#define sp                        <<" "<<
#define co(x)                     cout<<x nl
#define sz(a)                     a.size()
#define cy                        cout<<"YES" nl
#define cn                        cout<<"NO" nl
#define pb                        push_back
#define F                         first
#define S                         second
#define pi                        2*acos(0.0)
#define clr(z)                    z.clear()
#define rn                        return
#define gcd(a,b)                  __gcd(a,b)
#define mem(b,z)                  memset(b,z,sizeof(b))
#define fixed(x)                  fixed<<setprecision(x)

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

const int lx=1e6+123;
const ll mod = 1000000007;

void solve()
{
    int i, j, carry=0;
    string s, t, res;
    cin>>s>>t;

    while(s.size()<t.size())
        s='0'+s;
    while(t.size()<s.size())
        t='0'+t;
    for(i=s.size()-1; i>=0; i--)
    {
        int x, y;
        x=(s[i]-'0')+(t[i]-'0')+carry;
        y=x%10; x=x/10;
        res+=(char)(y+'0');
        carry=x;
    }
    if(carry)
        res+=(char)(carry+'0');
    reverse(res.begin(), res.end());
    cout<<res<<endl;
}

void init_code()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
}

int main()
{
    faster
  //  init_code();
    solve();
// A L H A M D U L I L L A H
// 1 2 3 2 1
}
