This is straight forward implementation of extended euclidean algorithm.

#include <bits/stdc++.h>
using namespace std;

long long ext_gcd (long long A, long long B, long long &X, long long &Y )
{
    long long x2, y2, x1, y1, x, y, r2, r1, q, r;
    x2 = 1;
    y2 = 0;
    x1 = 0;
    y1 = 1;
    for (r2 = A, r1 = B; r1 != 0; r2 = r1, r1 = r, x2 = x1, y2 = y1, x1 = x, y1 = y )
    {
        q = r2 / r1;
        r = r2 % r1;
        x = x2 - (q * x1);
        y = y2 - (q * y1);
    }
    X = x2;
    Y = y2;
    return r2;
}

Another One

long long exgcd(long long a, long long b, long long &x, long long &y)
{
    if(b == 0)
    {
    	  x=1, y=0;
	      return a;
    }
    long long t = exgcd(b, a%b, y, x);
    y -= a / b * x;
    return t; 
}

int main()
{
  long long a, b, x, y;
  cin >> a >> b;
  
  // We can call any of the function and it will give us the value of x and y
  exfcd(a, b, x, y);
  cout << x << " " << y << endl;
}
